/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;


import Code.DBConnect_2;
import java.awt.Component;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dilshan
 */
public class ManageSubjects extends javax.swing.JFrame {

    /**
     * Creates new form ManageSubjects
     */
    public ManageSubjects() {
        initComponents();
        con = DBConnect_2.connect();
        load();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
    }
    
    Connection con;
    PreparedStatement pst;
    DefaultTableModel df;
    
    public void load()
    {
        int a;
        try {
            pst = con.prepareStatement("select * from subjects");
            ResultSet rs = pst.executeQuery();
            
            ResultSetMetaData rd = rs.getMetaData();
            a = rd.getColumnCount();
            df = (DefaultTableModel)table.getModel();
            df.setRowCount(0);
            
            
            
            while(rs.next())
            {
                Vector v2 = new Vector();
                
                for(int i=1; i <= a; i++)
                {
                    v2.add(rs.getString("id"));
                    v2.add(rs.getString("subject_name"));
                    v2.add(rs.getString("subject_code"));
                    v2.add(rs.getString("year"));
                    v2.add(rs.getString("semester"));
                    v2.add(rs.getString("lecture_hours"));
                    v2.add(rs.getString("tutorial_hours"));
                    v2.add(rs.getString("lab_hours"));
                    v2.add(rs.getString("evaluation_hours"));
                     
                    
                }

                df.addRow(v2);
            }
      
        } catch (SQLException ex) {
            Logger.getLogger(ManageSubjects.class.getName()).log(Level.SEVERE, null, ex);
        }
        
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        home = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        searchTxt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        subName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        subCode = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        offYear = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        offSem = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        evaHours = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        labHours = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        tutHours = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        lecHours = new javax.swing.JComboBox<>();
        subNameVal = new javax.swing.JLabel();
        subCodeVal = new javax.swing.JLabel();
        offYearVal = new javax.swing.JLabel();
        offSemVal = new javax.swing.JLabel();
        evaVal = new javax.swing.JLabel();
        labVal = new javax.swing.JLabel();
        tutVal = new javax.swing.JLabel();
        lecVal = new javax.swing.JLabel();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        addSubjects = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1920, 1080));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setPreferredSize(new java.awt.Dimension(1920, 1080));

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(15, 19, 52));
        jLabel1.setText("MANAGE SUBJECTS");

        home.setBackground(new java.awt.Color(15, 19, 52));
        home.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        home.setForeground(new java.awt.Color(255, 255, 255));
        home.setText("Home");
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        searchTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTxtKeyReleased(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(15, 19, 52));
        jButton1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        table.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Subject Name", "Subject Code", "Offered Year", "Offered Semester", "Number of Lecture Hours", "Number of Tutorial Hours", "Number of Lab Hours", "Number of Evaluation Hours"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setFocusable(false);
        table.setIntercellSpacing(new java.awt.Dimension(0, 0));
        table.setRowHeight(25);
        table.setSelectionBackground(new java.awt.Color(15, 19, 52));
        table.getTableHeader().setReorderingAllowed(false);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel2.setText("Subject Name");

        subName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subNameActionPerformed(evt);
            }
        });
        subName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                subNameKeyReleased(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel3.setText("Subject Code");

        subCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                subCodeKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel4.setText("Offered Year ");

        offYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Year 1", "Year 2", "Year 3", "Year 4", " " }));

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel5.setText("Offered Semester");

        offSem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Semester 1", "Semester 2" }));

        jLabel9.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel9.setText("Number of Evaluation Hours");

        evaHours.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "0 Hours/Week", "1 Hours/Week", "2 Hours/Week", "3 Hours/Week", "4 Hours/Week", "5 Hours/Week" }));

        jLabel8.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel8.setText("Number of Lab Hours");

        labHours.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "0 Hours/Week", "1 Hours/Week", "2 Hours/Week", "3 Hours/Week", "4 Hours/Week", "5 Hours/Week" }));

        jLabel7.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel7.setText("Number of Tutorial Hours");

        tutHours.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "0 Hours/Week", "1 Hours/Week", "2 Hours/Week", "3 Hours/Week", "4 Hours/Week", "5 Hours/Week", " " }));

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel6.setText("Number of Lecture Hours");

        lecHours.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "0 Hours/Week", "1 Hours/Week", "2 Hours/Week", "3 Hours/Week", "4 Hours/Week", "5 Hours/Week" }));

        subNameVal.setForeground(new java.awt.Color(255, 51, 51));

        subCodeVal.setForeground(new java.awt.Color(255, 51, 51));

        offYearVal.setForeground(new java.awt.Color(255, 51, 51));

        offSemVal.setForeground(new java.awt.Color(255, 51, 51));

        evaVal.setForeground(new java.awt.Color(255, 51, 51));

        labVal.setForeground(new java.awt.Color(255, 51, 51));

        tutVal.setForeground(new java.awt.Color(255, 51, 51));

        lecVal.setForeground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 183, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(subName)
                            .addComponent(subCode)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(offYear, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(145, 145, 145))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(offSem, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(145, 145, 145)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(subNameVal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(subCodeVal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(offYearVal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(offSemVal, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(evaHours, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(evaVal, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lecHours, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lecVal, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(tutHours, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tutVal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(labHours, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labVal, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel6)
                        .addComponent(subName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lecHours, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(subNameVal, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lecVal, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tutHours, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tutVal, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(subCodeVal, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(subCode, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(offYear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(offYearVal, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel8)
                                        .addComponent(labHours, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(labVal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(evaHours, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9))
                            .addComponent(offSemVal, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(offSem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(evaVal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        update.setBackground(new java.awt.Color(15, 19, 52));
        update.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("Update");
        update.setPreferredSize(new java.awt.Dimension(93, 39));
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(15, 19, 52));
        delete.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete");
        delete.setPreferredSize(new java.awt.Dimension(93, 39));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        addSubjects.setBackground(new java.awt.Color(15, 19, 52));
        addSubjects.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        addSubjects.setForeground(new java.awt.Color(255, 255, 255));
        addSubjects.setText("Add Subject");
        addSubjects.setPreferredSize(new java.awt.Dimension(93, 39));
        addSubjects.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSubjectsActionPerformed(evt);
            }
        });

        Clear.setBackground(new java.awt.Color(15, 19, 52));
        Clear.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        Clear.setForeground(new java.awt.Color(255, 255, 255));
        Clear.setText("Clear");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addSubjects, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addSubjects, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        jPanel4.setBackground(new java.awt.Color(15, 19, 52));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete_32px.png"))); // NOI18N
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(88, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(110, Short.MAX_VALUE))
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 254, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void subNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subNameActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_subNameActionPerformed

    private void addSubjectsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSubjectsActionPerformed
        // TODO add your handling code here:
        
        addSubjects Asub = new addSubjects();
        Asub.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_addSubjectsActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:
        
        df = (DefaultTableModel)table.getModel();
        
        int selected = table.getSelectedRow();
        int id = Integer.parseInt(df.getValueAt(selected, 0).toString());
        
        subName.setText(df.getValueAt(selected, 1).toString());
        subCode.setText(df.getValueAt(selected, 2).toString());
       
        String year = (df.getValueAt(selected, 3).toString());
      
            switch(year){
                case "Year 1" :
                    offYear.setSelectedIndex(1);
                    break;
                    
                case "Year 2" :
                    offYear.setSelectedIndex(2);
                    break;
                    
                case "Year 3" :
                    offYear.setSelectedIndex(3);
                    break;
                    
                case "Year 4" :
                    offYear.setSelectedIndex(4);
                    break;    
                    
            }
            
            String semester = (df.getValueAt(selected, 4).toString());
      
            switch(semester){
                case "Semester 1" :
                    offSem.setSelectedIndex(1);
                    break;
                    
                case "Semester 2" :
                    offSem.setSelectedIndex(2);
                    break;
                    
            }
            
            String lec = (df.getValueAt(selected, 5).toString());
      
            switch(lec){
                case "0 Hours/Week" :
                    lecHours.setSelectedIndex(1);
                    break;
                    
                case "1 Hours/Week" :
                    lecHours.setSelectedIndex(2);
                    break;
                    
                case "2 Hours/Week" :
                    lecHours.setSelectedIndex(3);
                    break;
                    
                case "3 Hours/Week" :
                    lecHours.setSelectedIndex(4);
                    break; 
                    
                case "4 Hours/Week" :
                    lecHours.setSelectedIndex(5);
                    break; 
                    
                case "5 Hours/Week" :
                    lecHours.setSelectedIndex(6);
                    break;     
                    
            }
            
            String tut = (df.getValueAt(selected, 6).toString());
      
            switch(tut){
                case "0 Hours/Week" :
                    tutHours.setSelectedIndex(1);
                    break;
                    
                case "1 Hours/Week" :
                    tutHours.setSelectedIndex(2);
                    break;
                    
                case "2 Hours/Week" :
                    tutHours.setSelectedIndex(3);
                    break;
                    
                case "3 Hours/Week" :
                    tutHours.setSelectedIndex(4);
                    break; 
                    
                case "4 Hours/Week" :
                    tutHours.setSelectedIndex(5);
                    break; 
                    
                case "5 Hours/Week" :
                    tutHours.setSelectedIndex(6);
                    break;    
                    
            }
            
            String lab = (df.getValueAt(selected, 7).toString());
      
            switch(lab){
                case "0 Hours/Week" :
                    labHours.setSelectedIndex(1);
                    break;
                    
                case "1 Hours/Week" :
                    labHours.setSelectedIndex(2);
                    break;
                    
                case "2 Hours/Week" :
                    labHours.setSelectedIndex(3);
                    break;
                    
                case "3 Hours/Week" :
                    labHours.setSelectedIndex(4);
                    break; 
                    
                case "4 Hours/Week" :
                    labHours.setSelectedIndex(5);
                    break;    
                    
                case "5 Hours/Week" :
                    labHours.setSelectedIndex(6);
                    break;
                    
            }
            
            String eva = (df.getValueAt(selected, 8).toString());
      
            switch(eva){
                case "0 Hours/Week" :
                    evaHours.setSelectedIndex(1);
                    break;
                    
                case "1 Hours/Week" :
                    evaHours.setSelectedIndex(2);
                    break;
                    
                case "2 Hours/Week" :
                    evaHours.setSelectedIndex(3);
                    break;
                    
                case "3 Hours/Week" :
                    evaHours.setSelectedIndex(4);
                    break; 
                    
                case "4 Hours/Week" :
                    evaHours.setSelectedIndex(5);
                    break; 
                    
                case "5 Hours/Week" :
                    evaHours.setSelectedIndex(6);
                    break; 
                    
            }
        
        
    }//GEN-LAST:event_tableMouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        
       
        if(subName.getText().trim().isEmpty()){
            subNameVal.setText("* Please Enter Subject Name !");
           
        }
        else
            subNameVal.setText("");
            
        
        if(subCode.getText().trim().isEmpty()){
            subCodeVal.setText("* Please Enter Subject Code !");
        }
        else
            subCodeVal.setText("");
        
        if(offYear.getSelectedIndex() == 0){
            offYearVal.setText("* Please Select !");
        }
        else
            offYearVal.setText("");
        
        if(offSem.getSelectedIndex() == 0){
            offSemVal.setText("* Please Select !");
        }
        else
            offSemVal.setText("");
        
        if(lecHours.getSelectedIndex() == 0){
            lecVal.setText("* Please Select !");
        }
        else
            lecVal.setText("");
        
        if(tutHours.getSelectedIndex() == 0){
            tutVal.setText("* Please Select !");
        }
        else
            tutVal.setText("");
        
        if(labHours.getSelectedIndex() == 0){
            labVal.setText("* Please Select !");
        }
        else
            labVal.setText("");
        
        if(evaHours.getSelectedIndex() == 0){
            evaVal.setText("* Please Select !");
        }
        else
            evaVal.setText("");
        
        
        String sNamePATTERN = "[a-zA-Z]{2,5}$";
            Pattern sNamepatt = Pattern.compile(sNamePATTERN);
            Matcher sNamematch = sNamepatt.matcher(subName.getText());
            if(!sNamematch.matches()){
            subNameVal.setText("* Invalid Subject Name !");   
            }
            
            else
                subNameVal.setText("");  
        
        String sCodePATTERN = "^[a-zA-Z]{2}[0-9]{4}$";
            Pattern sCodepatt = Pattern.compile(sCodePATTERN);
            Matcher sCodematch = sCodepatt.matcher(subCode.getText());
            if(!sCodematch.matches()){
            subCodeVal.setText("* Invalid Subject Code !");   
            }
            
            else
                subCodeVal.setText("");
        
        
        if(subName.getText().trim().isEmpty() || !sNamematch.matches() || subCode.getText().trim().isEmpty() || !sCodematch.matches() || offYear.getSelectedIndex() == 0 || offSem.getSelectedIndex() == 0 || lecHours.getSelectedIndex() == 0 || 
                tutHours.getSelectedIndex() == 0 || labHours.getSelectedIndex() == 0 || evaHours.getSelectedIndex() == 0 ){
            Component frame = null;
            
            JOptionPane.showMessageDialog(frame, "Please fill in a valid value for all required fields");
        
        }
        
        else{
        
        df = (DefaultTableModel)table.getModel();
        
        int selected = table.getSelectedRow();
        int id = Integer.parseInt(df.getValueAt(selected, 0).toString());
        
            String SubName = subName.getText().trim();
            String SubCode = subCode.getText().trim();
            String OfferedYear = offYear.getSelectedItem().toString();
            String OfferedSemester = offSem.getSelectedItem().toString();
            String LecHours = lecHours.getSelectedItem().toString();
            String TutHours = tutHours.getSelectedItem().toString();
            String LabHours = labHours.getSelectedItem().toString();
            String EvaHours = evaHours.getSelectedItem().toString();
            
            int x = JOptionPane.showConfirmDialog(null, "Are you sure you want to update this Subject?", "Update", JOptionPane.YES_NO_OPTION);
            
        if(x == 0)
        {

        try {
            pst = con.prepareStatement("update subjects set subject_name =?, subject_code =?, year =?, semester =?, lecture_hours =?, tutorial_hours =?, lab_hours =?, evaluation_hours =? where id =?");
            pst.setString(1,SubName);
            pst.setString(2,SubCode);
            pst.setString(3,OfferedYear);
            pst.setString(4,OfferedSemester);
            pst.setString(5,LecHours);
            pst.setString(6,TutHours);
            pst.setString(7,LabHours);
            pst.setString(8,EvaHours);
            pst.setInt(9,id);
            
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Subject Updated Successfully");
            
            subName.setText("");
            subCode.setText("");
            offYear.setSelectedIndex(0);
            offSem.setSelectedIndex(0);
            lecHours.setSelectedIndex(0);
            tutHours.setSelectedIndex(0);
            labHours.setSelectedIndex(0);
            evaHours.setSelectedIndex(0);
            
            subNameVal.setText("");
            subCodeVal.setText("");
            offYearVal.setText("");
            offSemVal.setText("");
            lecVal.setText("");
            tutVal.setText("");
            labVal.setText("");
            evaVal.setText("");
            
            load();
            
            
        } catch (SQLException ex) {
            Logger.getLogger(ManageSubjects.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        }
        
        }
        
        
        
    }//GEN-LAST:event_updateActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        int a;
        try {
            // TODO add your handling code here:

            pst = con.prepareStatement("select * from subjects where subject_name = ?");
            String Sname = searchTxt.getText();
            
            pst.setString(1,Sname);
            ResultSet rs = pst.executeQuery();
            
                
            
            if(rs.next()==false){
                
                JOptionPane.showMessageDialog(this, "Sorry Record Not Found!");
                searchTxt.setText("");

                df.setRowCount(0);
                load();

            }
            else{
                
                ResultSetMetaData rd = rs.getMetaData();
                a = rd.getColumnCount();
                df = (DefaultTableModel)table.getModel();
                df.setRowCount(0);
               
                
                Vector v2 = new Vector();
                for(int i =1; i<=a; i++){
                    v2.add(rs.getString("id"));
                    v2.add(rs.getString("subject_name"));
                    v2.add(rs.getString("subject_code"));
                    v2.add(rs.getString("year"));
                    v2.add(rs.getString("semester"));
                    v2.add(rs.getString("lecture_hours"));
                    v2.add(rs.getString("tutorial_hours"));
                    v2.add(rs.getString("lab_hours"));
                    v2.add(rs.getString("evaluation_hours")); 
                }
                df.addRow(v2);
           
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(ManageSubjects.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void searchTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTxtKeyReleased
        // TODO add your handling code here:
                df.setRowCount(0);
                load();
    }//GEN-LAST:event_searchTxtKeyReleased

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        
        df = (DefaultTableModel)table.getModel();
        
        int selected = table.getSelectedRow();
        int id = Integer.parseInt(df.getValueAt(selected, 0).toString());
        
        int x = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this Subject?", "Delete", JOptionPane.YES_NO_OPTION);
            
        if(x == 0)
        {
            
            
            
        try {
            
            pst = con.prepareStatement("delete from subjects where id = ?");
            pst.setInt(1,id);
            pst.executeUpdate();

            JOptionPane.showMessageDialog(this,"Subject Deleted Successfully");
            
            subName.setText("");
            subCode.setText("");
            offYear.setSelectedIndex(0);
            offSem.setSelectedIndex(0);
            lecHours.setSelectedIndex(0);
            tutHours.setSelectedIndex(0);
            labHours.setSelectedIndex(0);
            evaHours.setSelectedIndex(0);
            
            subNameVal.setText("");
            subCodeVal.setText("");
            offYearVal.setText("");
            offSemVal.setText("");
            lecVal.setText("");
            tutVal.setText("");
            labVal.setText("");
            evaVal.setText("");
            
            load();
            
            
        } catch (SQLException ex) {
            Logger.getLogger(ManageSubjects.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        }
        
    }//GEN-LAST:event_deleteActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        // TODO add your handling code here:
        
            subName.setText("");
            subCode.setText("");
            offYear.setSelectedIndex(0);
            offSem.setSelectedIndex(0);
            lecHours.setSelectedIndex(0);
            tutHours.setSelectedIndex(0);
            labHours.setSelectedIndex(0);
            evaHours.setSelectedIndex(0);
            searchTxt.setText("");
            
            subNameVal.setText("");
            subCodeVal.setText("");
            offYearVal.setText("");
            offSemVal.setText("");
            lecVal.setText("");
            tutVal.setText("");
            labVal.setText("");
            evaVal.setText("");
            
            df.setRowCount(0);
            load();
            
    }//GEN-LAST:event_ClearActionPerformed

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        // TODO add your handling code here:
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }//GEN-LAST:event_jLabel11MouseClicked

    private void subNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_subNameKeyReleased
        // TODO add your handling code here:
        String sNamePATTERN = "[a-zA-Z]{2,5}$";
            Pattern sNamepatt = Pattern.compile(sNamePATTERN);
            Matcher sNamematch = sNamepatt.matcher(subName.getText());
            if(sNamematch.matches()){
            subNameVal.setText("");   
            }
    }//GEN-LAST:event_subNameKeyReleased

    private void subCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_subCodeKeyReleased
        // TODO add your handling code here:
        String sCodePATTERN = "^[a-zA-Z]{2}[0-9]{4}$";
            Pattern sCodepatt = Pattern.compile(sCodePATTERN);
            Matcher sCodematch = sCodepatt.matcher(subCode.getText());
            if(sCodematch.matches()){
            subCodeVal.setText("");   
            } 
    }//GEN-LAST:event_subCodeKeyReleased

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        // TODO add your handling code here:
        Home home = new Home();
        home.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_homeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageSubjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageSubjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageSubjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageSubjects.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageSubjects().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Clear;
    private javax.swing.JButton addSubjects;
    private javax.swing.JButton delete;
    private javax.swing.JComboBox<String> evaHours;
    private javax.swing.JLabel evaVal;
    private javax.swing.JButton home;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> labHours;
    private javax.swing.JLabel labVal;
    private javax.swing.JComboBox<String> lecHours;
    private javax.swing.JLabel lecVal;
    private javax.swing.JComboBox<String> offSem;
    private javax.swing.JLabel offSemVal;
    private javax.swing.JComboBox<String> offYear;
    private javax.swing.JLabel offYearVal;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JTextField subCode;
    private javax.swing.JLabel subCodeVal;
    private javax.swing.JTextField subName;
    private javax.swing.JLabel subNameVal;
    private javax.swing.JTable table;
    private javax.swing.JComboBox<String> tutHours;
    private javax.swing.JLabel tutVal;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
