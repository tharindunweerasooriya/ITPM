/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Code.DBconect_1;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author USER
 */
public class workingDays extends javax.swing.JFrame {

   Connection con= null;
    PreparedStatement pst=null;
    int x = 0;
    ResultSet rs;
    
    /**
     * Creates new form NewJFrame
     */
    public workingDays() {
        initComponents();
        con = DBconect_1.connect();
        deleteBtn();
        defaultData();
        update.setEnabled(false);
        jLabel8.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jButtonBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        monday = new javax.swing.JCheckBox();
        tuesday = new javax.swing.JCheckBox();
        wednesday = new javax.swing.JCheckBox();
        thursday = new javax.swing.JCheckBox();
        saturday = new javax.swing.JCheckBox();
        friday = new javax.swing.JCheckBox();
        sunday = new javax.swing.JCheckBox();
        workingDays = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        WorkingTimeH = new javax.swing.JSpinner();
        WorkingTimeM = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(15, 19, 52));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete_32px.png"))); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel7))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jButtonBack.setBackground(new java.awt.Color(15, 19, 52));
        jButtonBack.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jButtonBack.setForeground(new java.awt.Color(255, 255, 255));
        jButtonBack.setText("BACK");
        jButtonBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(15, 19, 52));
        jLabel1.setText("ADD WORKING DAYS AND HOURS");

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel4.setText("No of Workings Days");

        update.setBackground(new java.awt.Color(15, 19, 52));
        update.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("UPDATE");
        update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(15, 19, 52));
        delete.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("DELETE ALL");
        delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel5.setText("Working Days");

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel6.setText("Working Times For A Day");

        monday.setText("Monday");
        monday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mondayActionPerformed(evt);
            }
        });

        tuesday.setText("Tuesday");
        tuesday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tuesdayActionPerformed(evt);
            }
        });

        wednesday.setText("Wednesday");
        wednesday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wednesdayActionPerformed(evt);
            }
        });

        thursday.setText("Thursday");
        thursday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thursdayActionPerformed(evt);
            }
        });

        saturday.setText("Saturday");
        saturday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saturdayActionPerformed(evt);
            }
        });

        friday.setText("Friday");
        friday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fridayActionPerformed(evt);
            }
        });

        sunday.setText("Sunday");
        sunday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sundayActionPerformed(evt);
            }
        });

        workingDays.setModel(new javax.swing.SpinnerNumberModel(1, 1, 7, 1));
        workingDays.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                workingDaysStateChanged(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("No. of working days are not equal to selected working days count");

        WorkingTimeH.setModel(new javax.swing.SpinnerNumberModel(1, 1, 8, 1));

        WorkingTimeM.setModel(new javax.swing.SpinnerNumberModel(0, 0, 30, 30));

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel9.setText("hours");

        jLabel10.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel10.setText("hours");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(246, 246, 246)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(324, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel4))
                                .addGap(94, 94, 94)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(WorkingTimeH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel10)
                                        .addGap(36, 36, 36)
                                        .addComponent(WorkingTimeM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel9))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(saturday)
                                        .addGap(18, 18, 18)
                                        .addComponent(sunday))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(monday)
                                        .addGap(18, 18, 18)
                                        .addComponent(tuesday)
                                        .addGap(18, 18, 18)
                                        .addComponent(wednesday)
                                        .addGap(18, 18, 18)
                                        .addComponent(thursday)
                                        .addGap(18, 18, 18)
                                        .addComponent(friday))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(workingDays, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                                        .addComponent(jLabel8))))
                            .addComponent(jLabel5))
                        .addGap(74, 74, 74))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(92, 92, 92)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(workingDays, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(59, 59, 59)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(monday)
                            .addComponent(tuesday)
                            .addComponent(wednesday)
                            .addComponent(thursday)
                            .addComponent(friday))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saturday)
                            .addComponent(sunday))))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(WorkingTimeH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(WorkingTimeM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void workingDaysStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_workingDaysStateChanged
        // TODO add your handling code here:

        String workingDays = this.workingDays.getValue().toString();
        if(Integer.parseInt(workingDays)==x){

            update.setEnabled(true);
            jLabel8.setVisible(false);

        }
        else{

            update.setEnabled(false);
            jLabel8.setVisible(true);
        }

    }//GEN-LAST:event_workingDaysStateChanged

    private void sundayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sundayActionPerformed
        // TODO add your handling code here:

        if(sunday.isSelected()){
            x=x+1;
        }
        else{
            x=x-1;
        }
        String workingDays = this.workingDays.getValue().toString();
        if(Integer.parseInt(workingDays)==x){

            update.setEnabled(true);
            jLabel8.setVisible(false);

        }
        else{

            update.setEnabled(false);
            jLabel8.setVisible(true);

        }

    }//GEN-LAST:event_sundayActionPerformed

    private void fridayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fridayActionPerformed
        // TODO add your handling code here:

        if(friday.isSelected()){
            x=x+1;
        }
        else{
            x=x-1;
        }
        String workingDays = this.workingDays.getValue().toString();
        if(Integer.parseInt(workingDays)==x){

            update.setEnabled(true);
            jLabel8.setVisible(false);

        }
        else{

            update.setEnabled(false);
            jLabel8.setVisible(true);

        }

    }//GEN-LAST:event_fridayActionPerformed

    private void saturdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saturdayActionPerformed
        // TODO add your handling code here:

        if(saturday.isSelected()){
            x=x+1;
        }
        else{
            x=x-1;
        };
        String workingDays = this.workingDays.getValue().toString();
        if(Integer.parseInt(workingDays)==x){

            update.setEnabled(true);
            jLabel8.setVisible(false);

        }
        else{

            update.setEnabled(false);
            jLabel8.setVisible(true);

        }

    }//GEN-LAST:event_saturdayActionPerformed

    private void thursdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thursdayActionPerformed
        // TODO add your handling code here:

        if(thursday.isSelected()){
            x=x+1;
        }
        else{
            x=x-1;
        }
        String workingDays = this.workingDays.getValue().toString();
        if(Integer.parseInt(workingDays)==x){

            update.setEnabled(true);
            jLabel8.setVisible(false);

        }
        else{

            update.setEnabled(false);
            jLabel8.setVisible(true);

        }

    }//GEN-LAST:event_thursdayActionPerformed

    private void wednesdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wednesdayActionPerformed
        // TODO add your handling code here:

        if(wednesday.isSelected()){
            x=x+1;
        }
        else{
            x=x-1;
        }
        String workingDays = this.workingDays.getValue().toString();
        if(Integer.parseInt(workingDays)==x){

            update.setEnabled(true);
            jLabel8.setVisible(false);

        }
        else{

            update.setEnabled(false);
            jLabel8.setVisible(true);

        }

    }//GEN-LAST:event_wednesdayActionPerformed

    private void tuesdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tuesdayActionPerformed
        // TODO add your handling code here:

        if(tuesday.isSelected()){
            x=x+1;
        }
        else{
            x=x-1;
        }
        String workingDays = this.workingDays.getValue().toString();
        if(Integer.parseInt(workingDays)==x){

            update.setEnabled(true);
            jLabel8.setVisible(false);

        }
        else{

            update.setEnabled(false);
            jLabel8.setVisible(true);

        }

    }//GEN-LAST:event_tuesdayActionPerformed

    private void mondayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mondayActionPerformed
        // TODO add your handling code here:
        if(monday.isSelected()){
            x=x+1;
        }
        else{
            x=x-1;
        }

        String workingDays = this.workingDays.getValue().toString();
        if(Integer.parseInt(workingDays)==x){

            update.setEnabled(true);
            jLabel8.setVisible(false);

        }
        else{

            update.setEnabled(false);
            jLabel8.setVisible(true);

        }

    }//GEN-LAST:event_mondayActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        int response = JOptionPane.showConfirmDialog(this, "Do you want to continue?","Confirm",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);

        if(response==JOptionPane.YES_OPTION){

            try {
                pst = con.prepareStatement("delete from workingdays");
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Succesfully deleted all data!");
                delete.setEnabled(false);
                update.setEnabled(false);
                workingDays.setValue(1);
                monday.setSelected(false);
                tuesday.setSelected(false);
                wednesday.setSelected(false);
                thursday.setSelected(false);
                friday.setSelected(false);
                saturday.setSelected(false);
                sunday.setSelected(false);
                WorkingTimeH.setValue(1);
                WorkingTimeM.setValue(0);
                x=0;
            } catch (SQLException ex) {
                Logger.getLogger(workingDays.class.getName()).log(Level.SEVERE, null, ex);
            }finally{

                try{

                    rs.close();
                    pst.close();

                }catch(Exception e){}

            }

        }

    }//GEN-LAST:event_deleteActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:

        try {
            // TODO add your handling code here:

            pst = con.prepareStatement("select count(id) from workingdays");

            rs = pst.executeQuery();

            if(rs.next()== true){

                if(rs == null){

                    rs.close();
                    pst.close();

                    String workingDays, workingHours, workingMiniutes, monday, tuesday, wednesday, thursday, friday, saturday, sunday;

                    workingDays = this.workingDays.getValue().toString();
                    workingHours = WorkingTimeH.getValue().toString();
                    workingMiniutes = WorkingTimeM.getValue().toString();

                    try {

                        pst = con.prepareStatement("insert into workingdays(workingDays,monday,tuesday,wednesday,thursday,friday,saturday,sunday,workingHours,workingMiniutes)values(?,?,?,?,?,?,?,?,?,?)");
                        pst.setString(1, workingDays);

                        if (this.monday.isSelected()){

                            monday = this.monday.getText();
                            pst.setString(2, monday);
                        }
                        else{

                            pst.setString(2, "");

                        }

                        if (this.tuesday.isSelected()){

                            tuesday = this.tuesday.getText();
                            pst.setString(3, tuesday);

                        }
                        else{

                            pst.setString(3, "");

                        }

                        if (this.wednesday.isSelected()){

                            wednesday = this.wednesday.getText();
                            pst.setString(4, wednesday);

                        }
                        else{

                            pst.setString(4, "");

                        }

                        if (this.thursday.isSelected()){

                            thursday = this.thursday.getText();
                            pst.setString(5, thursday);

                        }
                        else{

                            pst.setString(5, "");

                        }

                        if (this.friday.isSelected()){

                            friday = this.friday.getText();
                            pst.setString(6, friday);

                        }
                        else{

                            pst.setString(6, "");

                        }

                        if (this.saturday.isSelected()){

                            saturday = this.saturday.getText();
                            pst.setString(7, saturday);

                        }
                        else{

                            pst.setString(7, "");

                        }

                        if (this.sunday.isSelected()){

                            sunday = this.sunday.getText();
                            pst.setString(8, sunday);

                        }
                        else{

                            pst.setString(8, "");

                        }

                        pst.setString(9, workingHours);
                        pst.setString(10, workingMiniutes);

                        pst.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Working days & hours added!");
                        delete.setEnabled(true);

                    } catch (SQLException ex) {
                        Logger.getLogger(workingDays.class.getName()).log(Level.SEVERE, null, ex);
                    }finally{

                        try{

                            rs.close();
                            pst.close();

                        }catch(Exception e){}

                    }

                }
                else{

                    rs.close();
                    pst.close();

                    try {
                        Class.forName("org.sqlite.JDBC");
                        con = DriverManager.getConnection("jdbc:sqlite:timetable.db");
                        pst = con.prepareStatement("delete from workingdays");
                        pst.executeUpdate();
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(workingDays.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(workingDays.class.getName()).log(Level.SEVERE, null, ex);
                    }finally{

                        try{

                            rs.close();
                            pst.close();

                        }catch(Exception e){}

                    }

                    String workingDays, workingHours, workingMiniutes, monday, tuesday, wednesday, thursday, friday, saturday, sunday;

                    workingDays = this.workingDays.getValue().toString();
                    workingHours = WorkingTimeH.getValue().toString();
                    workingMiniutes = WorkingTimeM.getValue().toString();

                    try {

                        pst = con.prepareStatement("insert into workingdays(workingDays,monday,tuesday,wednesday,thursday,friday,saturday,sunday,workingHours,workingMiniutes)values(?,?,?,?,?,?,?,?,?,?)");
                        pst.setString(1, workingDays);

                        if (this.monday.isSelected()){

                            monday = this.monday.getText();
                            pst.setString(2, monday);
                        }
                        else{

                            pst.setString(2, "");

                        }

                        if (this.tuesday.isSelected()){

                            tuesday = this.tuesday.getText();
                            pst.setString(3, tuesday);

                        }
                        else{

                            pst.setString(3, "");

                        }

                        if (this.wednesday.isSelected()){

                            wednesday = this.wednesday.getText();
                            pst.setString(4, wednesday);

                        }
                        else{

                            pst.setString(4, "");

                        }

                        if (this.thursday.isSelected()){

                            thursday = this.thursday.getText();
                            pst.setString(5, thursday);

                        }
                        else{

                            pst.setString(5, "");

                        }

                        if (this.friday.isSelected()){

                            friday = this.friday.getText();
                            pst.setString(6, friday);

                        }
                        else{

                            pst.setString(6, "");

                        }

                        if (this.saturday.isSelected()){

                            saturday = this.saturday.getText();
                            pst.setString(7, saturday);

                        }
                        else{

                            pst.setString(7, "");

                        }

                        if (this.sunday.isSelected()){

                            sunday = this.sunday.getText();
                            pst.setString(8, sunday);

                        }
                        else{

                            pst.setString(8, "");

                        }

                        pst.setString(9, workingHours);
                        pst.setString(10, workingMiniutes);

                        pst.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Working days & hours added!");
                        delete.setEnabled(true);

                    } catch (SQLException ex) {
                        Logger.getLogger(workingDays.class.getName()).log(Level.SEVERE, null, ex);
                    }finally{

                        try{

                            rs.close();
                            pst.close();

                        }catch(Exception e){}

                    }

                }

            }

        } catch (SQLException ex) {
            Logger.getLogger(workingDays.class.getName()).log(Level.SEVERE, null, ex);
        }finally{

            try{

                rs.close();
                pst.close();

            }catch(Exception e){}

        }
    }//GEN-LAST:event_updateActionPerformed

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        // TODO add your handling code here:

        Home h1 = new Home();
        h1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:

        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }//GEN-LAST:event_jLabel7MouseClicked

    private void deleteBtn(){
    
    
        try {
            // TODO add your handling code here:
            pst = con.prepareStatement("select count(id) from workingdays");
            
            rs = pst.executeQuery();
            
            if(rs.next()== true){
                
                int n = rs.getInt(1);
                
                if(n == 0){
                
                    
                    delete.setEnabled(false);
                    
                    
                }
                else{
                
                    delete.setEnabled(true);
                
                }
             
        }
        } catch (SQLException ex) {
            Logger.getLogger(workingDays.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
                    
                        try{
                        
                            rs.close();
                            pst.close();
                            
                        }catch(Exception e){}
                        
                    }
        
        
    }
    
    
    
    
    public void close(){
    
    
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
        
    
    }
    
    
    private void defaultData(){
    
        
        try {
            // TODO add your handling code here:
            
            pst = con.prepareStatement("select * from workingdays");
            
            rs = pst.executeQuery();
            
            if(rs.next()== true){
                
                if(!(rs == null)){
                
                    int Days = rs.getInt("workingDays");
                    String day1 = rs.getString("monday");
                    String day2 = rs.getString("tuesday");
                    String day3 = rs.getString("wednesday").toString();
                    String day4 = rs.getString("thursday");
                    String day5 = rs.getString("friday");
                    String day6 = rs.getString("saturday");
                    String day7 = rs.getString("sunday");
                    int hrs = rs.getInt("workingHours");
                    int mins = rs.getInt("workingMiniutes");
                    
                    
                    
                    workingDays.setValue(Days);
                    
                    if(day1.matches("Monday")){
                        monday.setSelected(true);
                        x=x+1;
                    }
                    
                    if(day2.matches("Tuesday")){
                        tuesday.setSelected(true);
                        x=x+1;
                    }
                    
                    if(day3.matches("Wednesday")){
                        wednesday.setSelected(true);
                        x=x+1;
                    }
                    
                    if(day4.matches("Thursday")){
                        thursday.setSelected(true);
                        x=x+1;
                    }
                    
                    if(day5.matches("Friday")){
                        friday.setSelected(true);
                        x=x+1;
                    }
                    
                    if(day6.matches("Saturday")){
                        saturday.setSelected(true);
                        x=x+1;
                    }
                    
                    if(day7.matches("Sunday")){
                        sunday.setSelected(true);
                        x=x+1;
                    }
                    
                    WorkingTimeH.setValue(hrs);
                    WorkingTimeM.setValue(mins);
                    
                    
                }
             
        }
        } catch (SQLException ex) {
            Logger.getLogger(workingDays.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
                    
                        try{
                        
                            rs.close();
                            pst.close();
                            
                        }catch(Exception e){}
                        
                    }
    
    
    }
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(workingDays.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(workingDays.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(workingDays.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(workingDays.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new workingDays().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner WorkingTimeH;
    private javax.swing.JSpinner WorkingTimeM;
    private javax.swing.JButton delete;
    private javax.swing.JCheckBox friday;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JCheckBox monday;
    private javax.swing.JCheckBox saturday;
    private javax.swing.JCheckBox sunday;
    private javax.swing.JCheckBox thursday;
    private javax.swing.JCheckBox tuesday;
    private javax.swing.JButton update;
    private javax.swing.JCheckBox wednesday;
    private javax.swing.JSpinner workingDays;
    // End of variables declaration//GEN-END:variables
}
