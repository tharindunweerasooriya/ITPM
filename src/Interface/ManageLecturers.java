/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;


import Code.DBConnect_2;
import java.awt.Component;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dilshan
 */
public class ManageLecturers extends javax.swing.JFrame {

    /**
     * Creates new form ManageLecturers
     */
    public ManageLecturers() {
        initComponents();
        con = DBConnect_2.connect();
        load();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
    }
    
    Connection con;
    PreparedStatement pst;
    DefaultTableModel df;
    
    public void load()
    {
        int a;
        try {
            pst = con.prepareStatement("select * from lecturers");
            ResultSet rs = pst.executeQuery();
            
            ResultSetMetaData rd = rs.getMetaData();
            a = rd.getColumnCount();
            df = (DefaultTableModel)Ltable.getModel();
            df.setRowCount(0);
            
            
            
            while(rs.next())
            {
                Vector v2 = new Vector();
                
                for(int i=1; i <= a; i++)
                {
                    v2.add(rs.getString("id"));
                    v2.add(rs.getString("name"));
                    v2.add(rs.getString("emp_id"));
                    v2.add(rs.getString("faculty"));
                    v2.add(rs.getString("department"));
                    v2.add(rs.getString("center"));
                    v2.add(rs.getString("building"));
                    v2.add(rs.getString("level"));
                    v2.add(rs.getString("rank"));
                    v2.add(rs.getString("monday"));
                    v2.add(rs.getString("tuesday"));
                    v2.add(rs.getString("wednesday"));
                    v2.add(rs.getString("thursday"));
                    v2.add(rs.getString("friday"));
                    v2.add(rs.getString("saturday"));
                    v2.add(rs.getString("sunday"));
                }

                df.addRow(v2);
            }
      
        } catch (SQLException ex) {
            Logger.getLogger(ManageLecturers.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        home = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Ltable = new javax.swing.JTable();
        searchTxt = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        fri = new javax.swing.JTextField();
        thu = new javax.swing.JTextField();
        wed = new javax.swing.JTextField();
        tue = new javax.swing.JTextField();
        mon = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        sat = new javax.swing.JTextField();
        sun = new javax.swing.JTextField();
        satVal = new javax.swing.JLabel();
        sunVal = new javax.swing.JLabel();
        monVal = new javax.swing.JLabel();
        tueVal = new javax.swing.JLabel();
        wedVal = new javax.swing.JLabel();
        thuVal = new javax.swing.JLabel();
        friVal = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        lecName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        empID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        faculty = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        department = new javax.swing.JComboBox<>();
        DepVal = new javax.swing.JLabel();
        FacVal = new javax.swing.JLabel();
        EmpIdVal = new javax.swing.JLabel();
        LecNameVal = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        level = new javax.swing.JComboBox<>();
        building = new javax.swing.JComboBox<>();
        center = new javax.swing.JComboBox<>();
        CenterVal = new javax.swing.JLabel();
        BuiVal = new javax.swing.JLabel();
        LevelVal = new javax.swing.JLabel();
        RankVal = new javax.swing.JLabel();
        rank = new javax.swing.JTextField();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        addLecturer = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1920, 1080));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        home.setBackground(new java.awt.Color(15, 19, 52));
        home.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        home.setForeground(new java.awt.Color(255, 255, 255));
        home.setText("Home");
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(15, 19, 52));
        jLabel1.setText("MANAGE LECTURERS");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Ltable.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        Ltable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Employee ID", "Faculty", "Department", "Center", "Building", "Level", "Rank", "Monday Active Hours", "Tuesday Active Hours", "Wednesday Active Hours", "Thursday Active Hours", "Friday Active Hours", "Saturday Active Hours", "Sunday Active Hours"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Ltable.setFocusable(false);
        Ltable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        Ltable.setRowHeight(25);
        Ltable.setSelectionBackground(new java.awt.Color(15, 19, 52));
        Ltable.setShowVerticalLines(false);
        Ltable.getTableHeader().setReorderingAllowed(false);
        Ltable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LtableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Ltable);

        searchTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTxtActionPerformed(evt);
            }
        });
        searchTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTxtKeyReleased(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(15, 19, 52));
        jButton4.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel3.setText("Active hours of lecturer");

        jLabel12.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel12.setText("Monday");

        jLabel15.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel15.setText("Tuesday");

        jLabel20.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel20.setText("Wednesday");

        jLabel21.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel21.setText("Thursday");

        jLabel24.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel24.setText("Friday");

        fri.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        fri.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                friKeyReleased(evt);
            }
        });

        thu.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        thu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                thuKeyReleased(evt);
            }
        });

        wed.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        wed.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                wedKeyReleased(evt);
            }
        });

        tue.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        tue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tueKeyReleased(evt);
            }
        });

        mon.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        mon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                monKeyReleased(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel28.setText("Saturday ");

        jLabel30.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel30.setText("Sunday");

        sat.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        sat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                satKeyReleased(evt);
            }
        });

        sun.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        sun.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sunKeyReleased(evt);
            }
        });

        satVal.setForeground(new java.awt.Color(255, 51, 51));

        sunVal.setForeground(new java.awt.Color(255, 51, 51));

        monVal.setForeground(new java.awt.Color(255, 51, 51));

        tueVal.setForeground(new java.awt.Color(255, 51, 51));

        wedVal.setForeground(new java.awt.Color(255, 51, 51));

        thuVal.setForeground(new java.awt.Color(255, 51, 51));

        friVal.setForeground(new java.awt.Color(255, 51, 51));

        jLabel13.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel13.setText("* Note - Please use the 00.00 - 00.00 format when entering active hours.");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                            .addGap(47, 47, 47)
                                            .addComponent(jLabel12))
                                        .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel21)
                                            .addComponent(jLabel20)
                                            .addComponent(jLabel24))))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tue)
                                    .addComponent(mon)
                                    .addComponent(wed)
                                    .addComponent(thu)
                                    .addComponent(fri, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(friVal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(thuVal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                        .addComponent(wedVal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tueVal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(monVal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel30)
                                    .addComponent(jLabel28))
                                .addGap(71, 71, 71)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(sat, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(satVal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(sun, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sunVal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(187, 187, 187))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(201, 201, 201))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(mon, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28)
                    .addComponent(sat, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(monVal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(satVal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(tue, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30)
                            .addComponent(sun, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tueVal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(wed, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(wedVal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(thu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(thuVal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel24)
                            .addComponent(fri, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(friVal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(sunVal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addGap(43, 43, 43))
        );

        monVal.getAccessibleContext().setAccessibleDescription("");

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel10.setText("Lecturer Name");

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel2.setText("Employee ID");

        empID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                empIDKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel4.setText("Faculty");

        faculty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Computing", "Engineering", "Business" }));

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel5.setText("Department");

        department.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Computer Systems Engineering", "Information Technology", "Computer Science and Software Engineering" }));

        DepVal.setForeground(new java.awt.Color(255, 51, 51));

        FacVal.setForeground(new java.awt.Color(255, 51, 51));

        EmpIdVal.setForeground(new java.awt.Color(255, 51, 51));

        LecNameVal.setForeground(new java.awt.Color(255, 51, 51));

        jLabel9.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel9.setText("Center");

        jLabel6.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel6.setText("Building");

        jLabel8.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel8.setText("Level");

        jLabel7.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel7.setText("Rank");

        level.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "1", "2", "3", "4", "5", "6", " " }));

        building.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "A", "B", "C", "D", "E" }));

        center.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Malabe Campus", "Metropolitan Campus", "Matara Center", "Kandy Center", "Kurunegala Center", "Jaffna Center", " " }));

        CenterVal.setForeground(new java.awt.Color(255, 51, 51));

        BuiVal.setForeground(new java.awt.Color(255, 51, 51));

        LevelVal.setForeground(new java.awt.Color(255, 51, 51));

        RankVal.setForeground(new java.awt.Color(255, 51, 51));

        rank.setEditable(false);
        rank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rankActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(165, 165, 165)
                                .addComponent(FacVal, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel10))
                                .addGap(43, 43, 43)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(EmpIdVal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lecName)
                                    .addComponent(empID, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                                    .addComponent(LecNameVal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(63, 63, 63)
                                .addComponent(department, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(106, 106, 106)
                                .addComponent(faculty, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(74, 74, 74)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGap(84, 84, 84)
                                                .addComponent(LevelVal, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(level, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(RankVal, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(rank, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(58, 58, 58)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(BuiVal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(building, 0, 180, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(CenterVal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(center, 0, 180, Short.MAX_VALUE)))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(DepVal, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(center, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CenterVal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(building, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BuiVal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(level, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addComponent(LevelVal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(rank, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RankVal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(lecName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LecNameVal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(empID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EmpIdVal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(faculty, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FacVal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(department, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DepVal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(searchTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(103, 103, 103))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 955, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(searchTxt))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        update.setBackground(new java.awt.Color(15, 19, 52));
        update.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(15, 19, 52));
        delete.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        addLecturer.setBackground(new java.awt.Color(15, 19, 52));
        addLecturer.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        addLecturer.setForeground(new java.awt.Color(255, 255, 255));
        addLecturer.setText("Add Lecturer");
        addLecturer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLecturerActionPerformed(evt);
            }
        });

        clear.setBackground(new java.awt.Color(15, 19, 52));
        clear.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(15, 19, 52));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete_32px.png"))); // NOI18N
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(127, 127, 127))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addLecturer, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(105, 105, 105))
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addLecturer, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTxtActionPerformed

    private void LtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LtableMouseClicked
        // TODO add your handling code here:
        df = (DefaultTableModel)Ltable.getModel();
        
        int selected = Ltable.getSelectedRow();
        int id = Integer.parseInt(df.getValueAt(selected, 0).toString());
        
        lecName.setText(df.getValueAt(selected, 1).toString());
        empID.setText(df.getValueAt(selected, 2).toString());
       
        String Faculty = (df.getValueAt(selected, 3).toString());
      
            switch(Faculty){
                case "Computing" :
                    faculty.setSelectedIndex(1);
                    break;
                    
                case "Engineering" :
                    faculty.setSelectedIndex(2);
                    break;
            
                    
                case "Business" :
                    faculty.setSelectedIndex(3);
                    break;    
                    
            }
            
            String Department = (df.getValueAt(selected, 4).toString());
      
            switch(Department){
                case "Computer Systems Engineering" :
                    department.setSelectedIndex(1);
                    break;
                    
                case "Information Technology" :
                    department.setSelectedIndex(2);
                    break;
                    
                case "Computer Science and Software Engineering" :
                    department.setSelectedIndex(3);
                    break;
                    
           /*     case "Civil Engineering" :
                    department.setSelectedIndex(4);
                    break;    
                    
                case "Electrical and Electronic Engineering" :
                    department.setSelectedIndex(5);
                    break;
                    
                case "Business Management" :
                    department.setSelectedIndex(6);
                    break;
                    
                case "Information Management" :
                    department.setSelectedIndex(7);
                    break; */
                    
                    
            }
            
            String Center = (df.getValueAt(selected, 5).toString());
      
            switch(Center){
                case "Malabe Campus" :
                    center.setSelectedIndex(1);
                    break;
                    
                case "Metropolitan Campus" :
                    center.setSelectedIndex(2);
                    break;
                    
                case "Matara Center" :
                    center.setSelectedIndex(3);
                    break;
                    
                case "Kandy Center" :
                    center.setSelectedIndex(4);
                    break; 
                    
                case "Kurunegala Center" :
                    center.setSelectedIndex(5);
                    break; 
                    
                case "Jaffna Center" :
                    center.setSelectedIndex(6);
                    break;     
                    
            }
            
            String Building = (df.getValueAt(selected, 6).toString());
      
            switch(Building){
                case "A" :
                    building.setSelectedIndex(1);
                    break;
                    
                case "B" :
                    building.setSelectedIndex(2);
                    break;
                    
                case "C" :
                    building.setSelectedIndex(3);
                    break;
                    
                case "D" :
                    building.setSelectedIndex(4);
                    break; 
                    
                case "E" :
                    building.setSelectedIndex(5);
                    break; 
    
            }

            
            String Llevel = (df.getValueAt(selected, 7).toString());
      
            switch(Llevel){
                case "1" :
                    level.setSelectedIndex(1);
                    break;
                    
                case "2" :
                    level.setSelectedIndex(2);
                    break;
                    
                case "3" :
                    level.setSelectedIndex(3);
                    break;
                    
                case "4" :
                    level.setSelectedIndex(4);
                    break; 
                    
                case "5" :
                    level.setSelectedIndex(5);
                    break; 
                    
                case "6" :
                    level.setSelectedIndex(6);
                    break; 
                    
            }
            
            rank.setText(df.getValueAt(selected, 8).toString());
            mon.setText(df.getValueAt(selected, 9).toString());
            tue.setText(df.getValueAt(selected, 10).toString());
            wed.setText(df.getValueAt(selected, 11).toString());
            thu.setText(df.getValueAt(selected, 12).toString());
            fri.setText(df.getValueAt(selected, 13).toString());
            sat.setText(df.getValueAt(selected, 14).toString());
            sun.setText(df.getValueAt(selected, 15).toString());
    }//GEN-LAST:event_LtableMouseClicked

    private void rankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rankActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rankActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        
        if(lecName.getText().trim().isEmpty()){
            LecNameVal.setText("* Please Enter Lecturer Name !");
           
        }
        else
            LecNameVal.setText("");
            
        
        if(empID.getText().trim().isEmpty()){
            EmpIdVal.setText("* Please Enter Employee ID !");
            RankVal.setText("* Please Enter Employee ID !");
        }
        else{
            EmpIdVal.setText("");
        
        EmpIdVal.setText("");
            
            String eIdPATTERN = "^[0-9]{6}$";
            Pattern eIDpatt = Pattern.compile(eIdPATTERN);
            Matcher eIDmatch = eIDpatt.matcher(empID.getText());
            if(!eIDmatch.matches()){
            EmpIdVal.setText("* Invalid Employee ID !");
            RankVal.setText("* Invalid Employee ID !");
            rank.setText("");
            }
            
            else{
                EmpIdVal.setText("");
                RankVal.setText("");
                
                if(level.getSelectedIndex() == 0){
                    RankVal.setText("* Please Select Lecturer Level !");
                }
                else{
                    RankVal.setText("");
        
                    String EmpID = empID.getText();
                    String Level = level.getSelectedItem().toString();

                    String Rank = Level + "." + EmpID ;
                    rank.setText(Rank);
                }
            }
        }
        
        if(faculty.getSelectedIndex() == 0){
            FacVal.setText("* Please Select !");
        }
        else
            FacVal.setText("");
        
        if(department.getSelectedIndex() == 0){
            DepVal.setText("* Please Select !");
        }
        else
            DepVal.setText("");
        
        if(center.getSelectedIndex() == 0){
            CenterVal.setText("* Please Select !");
        }
        else
            CenterVal.setText("");
        
        if(building.getSelectedIndex() == 0){
            BuiVal.setText("* Please Select !");
        }
        else
            BuiVal.setText("");
        
        if(level.getSelectedIndex() == 0){
            LevelVal.setText("* Please Select !");
        }
        else
            LevelVal.setText("");
        
        
        
        
        String eIdPATTERN = "^[0-9]{6}$";
            Pattern eIDpatt = Pattern.compile(eIdPATTERN);
            Matcher eIDmatch = eIDpatt.matcher(empID.getText());
            if(!eIDmatch.matches()){
            EmpIdVal.setText("* Invalid Employee ID !");   
            }
            
            else
                EmpIdVal.setText("");
            
            
        String monPATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}";
            Pattern monpatt = Pattern.compile(monPATTERN);
            Matcher monmatch = monpatt.matcher(mon.getText());
            if(mon.getText().trim().isEmpty() || monmatch.matches()){
            monVal.setText("");   
            }
            
            else
                monVal.setText("* Invalid Time Format !");
            
        
        String tuePATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}";
            Pattern tuepatt = Pattern.compile(tuePATTERN);
            Matcher tuematch = tuepatt.matcher(tue.getText());
            if(tue.getText().trim().isEmpty() || tuematch.matches()){
            tueVal.setText("");   
            }
            
            else
                tueVal.setText("* Invalid Time Format !");
            
            
        String wedPATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}";
            Pattern wedpatt = Pattern.compile(wedPATTERN);
            Matcher wedmatch = wedpatt.matcher(wed.getText());
            if(wed.getText().trim().isEmpty() || wedmatch.matches()){
            wedVal.setText("");   
            }
            
            else
                wedVal.setText("* Invalid Time Format !");
            
        
        String thuPATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}";
            Pattern thupatt = Pattern.compile(thuPATTERN);
            Matcher thumatch = thupatt.matcher(thu.getText());
            if(thu.getText().trim().isEmpty() || thumatch.matches()){
            thuVal.setText("");   
            }
            
            else
                thuVal.setText("* Invalid Time Format !");
            
        String friPATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}";
            Pattern fripatt = Pattern.compile(friPATTERN);
            Matcher frimatch = fripatt.matcher(fri.getText());
            if(fri.getText().trim().isEmpty() || frimatch.matches()){
            friVal.setText("");   
            }
            
            else
                friVal.setText("* Invalid Time Format !");
            
        String satPATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}";
            Pattern satpatt = Pattern.compile(satPATTERN);
            Matcher satmatch = satpatt.matcher(sat.getText());
            if(sat.getText().trim().isEmpty() || satmatch.matches()){
            satVal.setText("");   
            }
            
            else
                satVal.setText("* Invalid Time Format !");
            
        String sunPATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}";
            Pattern sunpatt = Pattern.compile(sunPATTERN);
            Matcher sunmatch = sunpatt.matcher(sun.getText());
            if(sun.getText().trim().isEmpty() || sunmatch.matches()){
            sunVal.setText("");   
            }
            
            else
                sunVal.setText("* Invalid Time Format !");
 
        
        if(lecName.getText().trim().isEmpty() || empID.getText().trim().isEmpty() || !eIDmatch.matches() || faculty.getSelectedIndex() == 0 || department.getSelectedIndex() == 0 || center.getSelectedIndex() == 0 || 
                building.getSelectedIndex() == 0 || level.getSelectedIndex() == 0){
            Component frame = null;
            
            JOptionPane.showMessageDialog(frame, "Please fill in a valid value for all required fields");
        
        }
        
        else{
        
        df = (DefaultTableModel)Ltable.getModel();
        
        int selected = Ltable.getSelectedRow();
        int id = Integer.parseInt(df.getValueAt(selected, 0).toString());
        
            String LecName = lecName.getText().trim();
            String EmpID = empID.getText().trim();
            String Faculty = faculty.getSelectedItem().toString();
            String Department = department.getSelectedItem().toString();
            String Center = center.getSelectedItem().toString();
            String Building = building.getSelectedItem().toString();
            String lLevel = level.getSelectedItem().toString();

            String Rank = rank.getText(); 
            
            
            String Monday = mon.getText().trim();
            String Tuesday = tue.getText().trim();
            String Wednesday = wed.getText().trim();
            String Thursday = thu.getText().trim();
            String Friday = fri.getText().trim();
            String Saturday = sat.getText().trim();
            String Sunday = sun.getText().trim();
            
            
            int x = JOptionPane.showConfirmDialog(null, "Are you sure you want to update this lecturer?", "Update", JOptionPane.YES_NO_OPTION);
            
        if(x == 0)
        {

        try {
           
            pst = con.prepareStatement("update lecturers set name =?, emp_id =?, faculty =?, department =?, center =?, building =?, level =?, rank =? ,monday =? ,tuesday =? ,wednesday =? ,thursday =? ,friday =? ,saturday =? ,sunday =? where id =?");
            pst.setString(1,LecName);
                pst.setString(2,EmpID);
                pst.setString(3,Faculty);
                pst.setString(4,Department);
                pst.setString(5,Center);
                pst.setString(6,Building);
                pst.setString(7,lLevel);
                pst.setString(8,Rank);
                pst.setString(9,Monday);
                pst.setString(10,Tuesday);
                pst.setString(11,Wednesday);
                pst.setString(12,Thursday);
                pst.setString(13,Friday);
                pst.setString(14,Saturday);
                pst.setString(15,Sunday);
                pst.setInt(16,id);
                
                pst.executeUpdate();
                
            JOptionPane.showMessageDialog(this, "Lecturer updated Successfully");
            
            lecName.setText("");
            empID.setText("");
            faculty.setSelectedIndex(0);
            department.setSelectedIndex(0);
            center.setSelectedIndex(0);
            building.setSelectedIndex(0);
            level.setSelectedIndex(0);
            rank.setText("");
            mon.setText("");
            tue.setText("");
            wed.setText("");
            thu.setText("");
            fri.setText("");
            sat.setText("");
            sun.setText("");
            
            LecNameVal.setText("");
            EmpIdVal.setText("");
            FacVal.setText("");
            DepVal.setText("");
            CenterVal.setText("");
            BuiVal.setText("");
            LevelVal.setText("");
            RankVal.setText("");
            
            
            
            load();
            
            
        } catch (SQLException ex) {
            Logger.getLogger(ManageLecturers.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        }
        
        }
    }//GEN-LAST:event_updateActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
            lecName.setText("");
            empID.setText("");
            faculty.setSelectedIndex(0);
            department.setSelectedIndex(0);
            center.setSelectedIndex(0);
            building.setSelectedIndex(0);
            level.setSelectedIndex(0);
            rank.setText("");
            mon.setText("");
            tue.setText("");
            wed.setText("");
            thu.setText("");
            fri.setText("");
            sat.setText("");
            sun.setText("");
            
            LecNameVal.setText("");
            EmpIdVal.setText("");
            FacVal.setText("");
            DepVal.setText("");
            CenterVal.setText("");
            BuiVal.setText("");
            LevelVal.setText("");
            RankVal.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void addLecturerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLecturerActionPerformed
        // TODO add your handling code here:
        addLecturers Alec = new addLecturers();
        Alec.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_addLecturerActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        df = (DefaultTableModel)Ltable.getModel();
        
        int selected = Ltable.getSelectedRow();
        int id = Integer.parseInt(df.getValueAt(selected, 0).toString());
        
        int x = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this Lecturer?", "Delete", JOptionPane.YES_NO_OPTION);
            
        if(x == 0)
        {
            
            
            
        try {
            
            pst = con.prepareStatement("delete from lecturers where id = ?");
            pst.setInt(1,id);
            pst.executeUpdate();

            JOptionPane.showMessageDialog(this,"Lecturer Deleted Successfully");
            
            lecName.setText("");
            empID.setText("");
            faculty.setSelectedIndex(0);
            department.setSelectedIndex(0);
            center.setSelectedIndex(0);
            building.setSelectedIndex(0);
            level.setSelectedIndex(0);
            rank.setText("");
            mon.setText("");
            tue.setText("");
            wed.setText("");
            thu.setText("");
            fri.setText("");
            sat.setText("");
            sun.setText("");
            
            LecNameVal.setText("");
            EmpIdVal.setText("");
            FacVal.setText("");
            DepVal.setText("");
            CenterVal.setText("");
            BuiVal.setText("");
            LevelVal.setText("");
            RankVal.setText("");
            
            load();
            
            } catch (SQLException ex) {
            Logger.getLogger(ManageLecturers.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void searchTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTxtKeyReleased
        // TODO add your handling code here:
                df.setRowCount(0);
                load();
    }//GEN-LAST:event_searchTxtKeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String val = searchTxt.getText().toString();
        
        int a;
        try{
            pst = con.prepareStatement("select * from lecturers where name like '%"+val+"%'");
            ResultSet rs = pst.executeQuery();
            
            ResultSetMetaData rd = rs.getMetaData();
            a = rd.getColumnCount();
            df = (DefaultTableModel)Ltable.getModel();
            df.setRowCount(0);
            
            
            
            while(rs.next()){
                
                Vector v2 = new Vector();
                for(int i =1; i<=a; i++){
                    v2.add(rs.getString("id"));
                    v2.add(rs.getString("name"));
                    v2.add(rs.getString("emp_id"));
                    v2.add(rs.getString("faculty"));
                    v2.add(rs.getString("department"));
                    v2.add(rs.getString("center"));
                    v2.add(rs.getString("building"));
                    v2.add(rs.getString("level"));
                    v2.add(rs.getString("rank"));
                    v2.add(rs.getString("monday"));
                    v2.add(rs.getString("tuesday"));
                    v2.add(rs.getString("wednesday"));
                    v2.add(rs.getString("thursday"));
                    v2.add(rs.getString("friday"));
                    v2.add(rs.getString("saturday"));
                    v2.add(rs.getString("sunday"));
                }
                df.addRow(v2);
            }
            
            
        } 
        catch (SQLException ex) {
            Logger.getLogger(ManageLecturers.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
      /*  int a;
     
        try {
            // TODO add your handling code here:

            pst = con.prepareStatement("select * from lecturers where name = ?");
            String Sname = searchTxt.getText();
            
            pst.setString(1,Sname);
            ResultSet rs = pst.executeQuery();
            
                
            
            if(rs.next()==false){
                
                JOptionPane.showMessageDialog(this, "Sorry Record Not Found!");
                searchTxt.setText("");

                df.setRowCount(0);
                load();

            }
            else{
                
                ResultSetMetaData rd = rs.getMetaData();
                a = rd.getColumnCount();
                df = (DefaultTableModel)Ltable.getModel();
                df.setRowCount(0);
               
                
                Vector v2 = new Vector();
                for(int i =1; i<=a; i++){
                    v2.add(rs.getString("id"));
                    v2.add(rs.getString("name"));
                    v2.add(rs.getString("emp_id"));
                    v2.add(rs.getString("faculty"));
                    v2.add(rs.getString("department"));
                    v2.add(rs.getString("center"));
                    v2.add(rs.getString("building"));
                    v2.add(rs.getString("level"));
                    v2.add(rs.getString("rank"));
                    v2.add(rs.getString("monday"));
                    v2.add(rs.getString("tuesday"));
                    v2.add(rs.getString("wednesday"));
                    v2.add(rs.getString("thursday"));
                    v2.add(rs.getString("friday"));
                    v2.add(rs.getString("saturday"));
                    v2.add(rs.getString("sunday"));
                }
                df.addRow(v2);
           
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(ManageLecturers.class.getName()).log(Level.SEVERE, null, ex);
        } */
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        // TODO add your handling code here:
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }//GEN-LAST:event_jLabel11MouseClicked

    private void empIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_empIDKeyReleased
        // TODO add your handling code here:
         rank.setText("");
            
            String eIdPATTERN = "^[0-9]{6}$";
            Pattern eIDpatt = Pattern.compile(eIdPATTERN);
            Matcher eIDmatch = eIDpatt.matcher(empID.getText());
            if(eIDmatch.matches()){
            EmpIdVal.setText("");  
            RankVal.setText("");
            }
    }//GEN-LAST:event_empIDKeyReleased

    private void monKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_monKeyReleased
        // TODO add your handling code here:
        String monPATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}";
            Pattern monpatt = Pattern.compile(monPATTERN);
            Matcher monmatch = monpatt.matcher(mon.getText());
            if(mon.getText().trim().isEmpty() || monmatch.matches()){
            monVal.setText("");   
            }
    }//GEN-LAST:event_monKeyReleased

    private void tueKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tueKeyReleased
        // TODO add your handling code here:
        String tuePATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}";
            Pattern tuepatt = Pattern.compile(tuePATTERN);
            Matcher tuematch = tuepatt.matcher(tue.getText());
            if(tue.getText().trim().isEmpty() || tuematch.matches()){
            tueVal.setText("");   
            }
    }//GEN-LAST:event_tueKeyReleased

    private void wedKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_wedKeyReleased
        // TODO add your handling code here:
        String wedPATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}";
            Pattern wedpatt = Pattern.compile(wedPATTERN);
            Matcher wedmatch = wedpatt.matcher(wed.getText());
            if(wed.getText().trim().isEmpty() || wedmatch.matches()){
            wedVal.setText("");   
            }
    }//GEN-LAST:event_wedKeyReleased

    private void thuKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_thuKeyReleased
        // TODO add your handling code here:
        String thuPATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}";
            Pattern thupatt = Pattern.compile(thuPATTERN);
            Matcher thumatch = thupatt.matcher(thu.getText());
            if(thu.getText().trim().isEmpty() || thumatch.matches()){
            thuVal.setText("");   
            }
    }//GEN-LAST:event_thuKeyReleased

    private void friKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_friKeyReleased
        // TODO add your handling code here:
        String friPATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}";
            Pattern fripatt = Pattern.compile(friPATTERN);
            Matcher frimatch = fripatt.matcher(fri.getText());
            if(fri.getText().trim().isEmpty() || frimatch.matches()){
            friVal.setText("");   
            }
    }//GEN-LAST:event_friKeyReleased

    private void satKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_satKeyReleased
        // TODO add your handling code here:
        String satPATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}";
            Pattern satpatt = Pattern.compile(satPATTERN);
            Matcher satmatch = satpatt.matcher(sat.getText());
            if(sat.getText().trim().isEmpty() || satmatch.matches()){
            satVal.setText("");   
            }
    }//GEN-LAST:event_satKeyReleased

    private void sunKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sunKeyReleased
        // TODO add your handling code here:
        String sunPATTERN = "[0-9]{2}[.][0-9]{2}[-][0-9]{2}[.][0-9]{2}";
            Pattern sunpatt = Pattern.compile(sunPATTERN);
            Matcher sunmatch = sunpatt.matcher(sun.getText());
            if(sun.getText().trim().isEmpty() || sunmatch.matches()){
            sunVal.setText("");   
            }
    }//GEN-LAST:event_sunKeyReleased

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        // TODO add your handling code here:
        Home home = new Home();
        home.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_homeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageLecturers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageLecturers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageLecturers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageLecturers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageLecturers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BuiVal;
    private javax.swing.JLabel CenterVal;
    private javax.swing.JLabel DepVal;
    private javax.swing.JLabel EmpIdVal;
    private javax.swing.JLabel FacVal;
    private javax.swing.JLabel LecNameVal;
    private javax.swing.JLabel LevelVal;
    private javax.swing.JTable Ltable;
    private javax.swing.JLabel RankVal;
    private javax.swing.JButton addLecturer;
    private javax.swing.JComboBox<String> building;
    private javax.swing.JComboBox<String> center;
    private javax.swing.JButton clear;
    private javax.swing.JButton delete;
    private javax.swing.JComboBox<String> department;
    private javax.swing.JTextField empID;
    private javax.swing.JComboBox<String> faculty;
    private javax.swing.JTextField fri;
    private javax.swing.JLabel friVal;
    private javax.swing.JButton home;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lecName;
    private javax.swing.JComboBox<String> level;
    private javax.swing.JTextField mon;
    private javax.swing.JLabel monVal;
    private javax.swing.JTextField rank;
    private javax.swing.JTextField sat;
    private javax.swing.JLabel satVal;
    private javax.swing.JTextField searchTxt;
    private javax.swing.JTextField sun;
    private javax.swing.JLabel sunVal;
    private javax.swing.JTextField thu;
    private javax.swing.JLabel thuVal;
    private javax.swing.JTextField tue;
    private javax.swing.JLabel tueVal;
    private javax.swing.JButton update;
    private javax.swing.JTextField wed;
    private javax.swing.JLabel wedVal;
    // End of variables declaration//GEN-END:variables
}
